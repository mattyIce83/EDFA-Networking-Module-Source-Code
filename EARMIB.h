#ifndef EARMIB_HEADER_FILE
#define EARMIB_HEADER_FILE
/*
 *     Module Name: EARMIB
 *	       Version: 1.00
 *    Generated On: $Date: 2011-10-11 13:48:27 $	
 *	        Author: Generated by MibMan utility program
 *	      Language: Ansi C
 * Compile Options:
 * Compile defines:
 *	     Libraries:
 *    Link Options:
 *
 *    Entry Points:
 *
 *
 * Description.
 * =======================================================================
 *
 *
 * Edit Date/Ver   Edit Description
 * ==============  =======================================================
 *
 */

#include <asn1.h>
#include <snmpimpl.h>
#include "MibMan.h"
#include "readFrom2U2.h"
/*
 * Declarations for action functions.
 */
void *earModelNumberRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earModelNumberWrite(int actionCode, struct varBind *info);
void *earSerialNumberRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earSerialNumberWrite(int actionCode, struct varBind *info);
void *earDateOfManufactureRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earDateOfManufactureWrite(int actionCode, struct varBind *info);
void *earFirmwareRevisionRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earFirmwareRevisionWrite(int actionCode, struct varBind *info);
void *earControlModeRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earControlModeWrite(int actionCode, struct varBind *info);
void *earRtcTimeRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earRtcTimeWrite(int actionCode, struct varBind *info);
void *earDigiFirmwareRevisionRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earDigiFirmwareRevisionWrite(int actionCode, struct varBind *info);
void *earDigiBank1FirmwareRevisionRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earDigiBank1FirmwareRevisionWrite(int actionCode, struct varBind *info);
void *earDigiBank2FirmwareRevisionRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earDigiBank2FirmwareRevisionWrite(int actionCode, struct varBind *info);
void *earDigiSelectedFirmwareBankRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earDigiSelectedFirmwareBankWrite(int actionCode, struct varBind *info);
void *earDigiFirmwareConfirmRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earDigiFirmwareConfirmWrite(int actionCode, struct varBind *info);
void *earUpgradeDigiFirmwareRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earUpgradeDigiFirmwareWrite(int actionCode, struct varBind *info);
void *earCleiCodeRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earCleiCodeWrite(int actionCode, struct varBind *info);
void *earTelnetTimeoutRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earTelnetTimeoutWrite(int actionCode, struct varBind *info);
void *earIpAddressRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
/* int earIpAddressWrite(int actionCode, struct varBind *info); */
void *earSubnetMaskRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
/* int earSubnetMaskWrite(int actionCode, struct varBind *info); */
void *earGatewayRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
/* int earGatewayWrite(int actionCode, struct varBind *info); */
void *earVendorProductNameAndSerialNumberRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earVendorProductNameAndSerialNumberWrite(int actionCode, struct varBind *info);
void *earLastTrapSentRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earLastTrapSentWrite(int actionCode, struct varBind *info);
void *earTrapPortRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earTrapPortWrite(int actionCode, struct varBind *info);
void *earSnmpMngrTableRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earSnmpMngrTableWrite(int actionCode, struct varBind *info);
void *earGainControlSetpointRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earGainControlSetpointWrite(int actionCode, struct varBind *info);
void *earMeasuredGainValueRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earMeasuredGainValueWrite(int actionCode, struct varBind *info);
void *earMinimumGainSetpointRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earMinimumGainSetpointWrite(int actionCode, struct varBind *info);
void *earMaximumGainSetpointRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earMaximumGainSetpointWrite(int actionCode, struct varBind *info);
void *earOutputPowerSetpointValueRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earOutputPowerSetpointValueWrite(int actionCode, struct varBind *info);
void *earTotalOpticalOutputPowerRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earTotalOpticalOutputPowerWrite(int actionCode, struct varBind *info);
void *earMaximumPowerSetpointRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earMaximumPowerSetpointWrite(int actionCode, struct varBind *info);
void *earCurrentSetpointValueRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earCurrentSetpointValueWrite(int actionCode, struct varBind *info);
void *earMaximumCurrentSetpointRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earMaximumCurrentSetpointWrite(int actionCode, struct varBind *info);
void *earPumpLaserCurrentRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
void *earPumpLaserCurrent2Read(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earPumpLaserCurrentWrite(int actionCode, struct varBind *info);
void *earAmbientTemperatureRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earAmbientTemperatureWrite(int actionCode, struct varBind *info);
void *earTotalOpticalInputPowerRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earTotalOpticalInputPowerWrite(int actionCode, struct varBind *info);
void *earPowerSafetyModeRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earPowerSafetyModeWrite(int actionCode, struct varBind *info);
void *earPumpsOffRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earPumpsOffWrite(int actionCode, struct varBind *info);
void *earChassisRebootRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earChassisRebootWrite(int actionCode, struct varBind *info);
void *earOutputPowerALSonFDSetpointRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earOutputPowerALSonFDSetpointWrite(int actionCode, struct varBind *info);
void *earOutputPower2ALSonFDSetpointRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earOutputPower2ALSonFDSetpointWrite(int actionCode, struct varBind *info);
void *earOutputPowerALSoffFDSetpointRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earOutputPowerALSoffFDSetpointWrite(int actionCode, struct varBind *info);
void *earOutputPower2ALSoffFDSetpointRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earOutputPower2ALSoffFDSetpointWrite(int actionCode, struct varBind *info);
void *earOutputPowerALSonSetpointRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earOutputPowerALSonSetpointWrite(int actionCode, struct varBind *info);
void *earOutputPower2ALSonSetpointRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earOutputPower2ALSonSetpointWrite(int actionCode, struct varBind *info);
void *earOutputPowerALSoffSetpointRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earOutputPowerALSoffSetpointWrite(int actionCode, struct varBind *info);
void *earOutputPower2ALSoffSetpointRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earOutputPower2ALSoffSetpointWrite(int actionCode, struct varBind *info);
void *earControlModeFDRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earControlModeFDWrite(int actionCode, struct varBind *info);
void *earDeviceTypeRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earDeviceTypeWrite(int actionCode, struct varBind *info);
void *earDeviceTypeFDRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earDeviceTypeFDWrite(int actionCode, struct varBind *info);
void *earALSonDurationRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earALSonDurationWrite(int actionCode, struct varBind *info);
void *earALSoffDurationRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earALSoffDurationWrite(int actionCode, struct varBind *info);
void *earNominalDurationRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earNominalDurationWrite(int actionCode, struct varBind *info);
void *earDataModeRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earDataModeWrite(int actionCode, struct varBind *info);
void *earOSCPowerSetpointValueRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earOSCPowerSetpointValueWrite(int actionCode, struct varBind *info);
void *earOutputPower2SetpointValueRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earOutputPower2SetpointValueWrite(int actionCode, struct varBind *info);
void *earTotalOpticalOutputPower2Read(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earTotalOpticalOutputPower2Write(int actionCode, struct varBind *info);
void *earGainControlSetpoint2Read(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earGainControlSetpoint2Write(int actionCode, struct varBind *info);
void *earOSCOpticalPowerRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earOSCOpticalPowerWrite(int actionCode, struct varBind *info);
void *earTemperatureAlarmThresholdRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earTemperatureAlarmThresholdWrite(int actionCode, struct varBind *info);
void *earInputPowerLowAlarmLevelRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earInputPowerLowAlarmLevelWrite(int actionCode, struct varBind *info);
void *earFactoryDefaultInputPowerLowAlarmLevelRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earFactoryDefaultInputPowerLowAlarmLevelWrite(int actionCode, struct varBind *info);
void *earInputPowerOffAlarmLevelRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earInputPowerOffAlarmLevelWrite(int actionCode, struct varBind *info);
void *earInputPowerHighAlarmLevelRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earInputPowerHighAlarmLevelWrite(int actionCode, struct varBind *info);
void *earInputPowerTooHighAlarmLevelRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earInputPowerTooHighAlarmLevelWrite(int actionCode, struct varBind *info);
void *earOutputPowerLowAlarmLevelRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earOutputPowerLowAlarmLevelWrite(int actionCode, struct varBind *info);
void *earOutputPowerOffAlarmLevelRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earOutputPowerOffAlarmLevelWrite(int actionCode, struct varBind *info);
void *earOutputPowerHighAlarmLevelRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earOutputPowerHighAlarmLevelWrite(int actionCode, struct varBind *info);
void *earOutputPowerTooHighAlarmLevelRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earOutputPowerTooHighAlarmLevelWrite(int actionCode, struct varBind *info);
void *earStatusValueRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earStatusValueWrite(int actionCode, struct varBind *info);
void *earRelayAlarmStatusRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earRelayAlarmStatusWrite(int actionCode, struct varBind *info);
void *earRelayStatusRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earRelayStatusWrite(int actionCode, struct varBind *info);
void *earAlarmStatusRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earAlarmStatusWrite(int actionCode, struct varBind *info);
void *earSetRelayInputPowerLowAlarmRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earSetRelayInputPowerLowAlarmWrite(int actionCode, struct varBind *info);
void *earSetRelayInputPowerHighAlarmRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earSetRelayInputPowerHighAlarmWrite(int actionCode, struct varBind *info);
void *earSetRelayInputPowerTooHighAlarmRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earSetRelayInputPowerTooHighAlarmWrite(int actionCode, struct varBind *info);
void *earSetRelayOutputPowerLowAlarmRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earSetRelayOutputPowerLowAlarmWrite(int actionCode, struct varBind *info);
void *earSetRelayOutputPowerHighAlarmRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earSetRelayOutputPowerHighAlarmWrite(int actionCode, struct varBind *info);
void *earSetRelayOutputPowerTooHighAlarmRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earSetRelayOutputPowerTooHighAlarmWrite(int actionCode, struct varBind *info);
void *earSetRelayFanFailureAlarmRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earSetRelayFanFailureAlarmWrite(int actionCode, struct varBind *info);
void *earSetRelayAmbientTemperatureHighAlarmRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earSetRelayAmbientTemperatureHighAlarmWrite(int actionCode, struct varBind *info);
void *earOutputPower2OffAlarmLevelRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earOutputPower2OffAlarmLevelWrite(int actionCode, struct varBind *info);
void *earOutputPower2LowAlarmLevelRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earOutputPower2LowAlarmLevelWrite(int actionCode, struct varBind *info);
void *earOutputPower2HighAlarmLevelRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earOutputPower2HighAlarmLevelWrite(int actionCode, struct varBind *info);
void *earOutputPower2TooHighAlarmLevelRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earOutputPower2TooHighAlarmLevelWrite(int actionCode, struct varBind *info);
void *earAlarmTableRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earAlarmTableWrite(int actionCode, struct varBind *info);
void *earEventTableRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earEventTableWrite(int actionCode, struct varBind *info);
void *earHistoryTableRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earHistoryTableWrite(int actionCode, struct varBind *info);
void *earAliveTrapPeriodValueRead (struct variable *vp, oid *name, int *length, int isGet, int *varLen, setMethod *setVar);
int earAliveTrapPeriodValueWrite (int actionCode, struct varBind *info);
void *earTotalOpticalInput2PowerRead (struct variable *vp, oid *name, int *length, int isGet, int *varLen, setMethod *setVar);
/////
void *earInput2PowerLowAlarmLevelRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earInput2PowerLowAlarmLevelWrite(int actionCode, struct varBind *info);
void *earInput2PowerOffAlarmLevelRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earInput2PowerOffAlarmLevelWrite(int actionCode, struct varBind *info);
void *earInput2PowerHighAlarmLevelRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earInput2PowerHighAlarmLevelWrite(int actionCode, struct varBind *info);
void *earInput2PowerTooHighAlarmLevelRead(struct variable *vp, oid *name, int *length, int exact, int *varLen, setMethod *setVar);
int earInput2PowerTooHighAlarmLevelWrite(int actionCode, struct varBind *info);
/*
 * MIB table earSnmpMngrTable(1.3.6.1.4.1.19775.1.1.1.21)
 *
 * The table of SNMP network managers.
 */
typedef struct
{
    INT32 earSnmpMngrIndex;
    WORD8 earSnmpMngrIpAddr[4];
    INT32 earSnmpMngrRowStatus;
} earSnmpMngrTableType;

/*
 * Hint codes for fields in table earSnmpMngrTable(1.3.6.1.4.1.19775.1.1.1.21)
 */
#define earSnmpMngrIndexHint 0
#define earSnmpMngrIpAddrHint 1
#define earSnmpMngrRowStatusHint 2

/*
 * MIB table earAlarmTable(1.3.6.1.4.1.19775.1.1.3.27)
 *
 * Table for current alarm conditions present on the system
 */
typedef struct
{
    INT32 earAlarmIndex;
    INT32 earAlarmType;
    MAN_OCTET_STRING_TYPE earAlarmTimeStamp;
    INT32 earAlarmSeverity;
} earAlarmTableType;

/*
 * Hint codes for fields in table earAlarmTable(1.3.6.1.4.1.19775.1.1.3.27)
 */
#define earAlarmIndexHint 0
#define earAlarmTypeHint 1
#define earAlarmTimeStampHint 2
#define earAlarmSeverityHint 3

/*
 * MIB table earEventTable(1.3.6.1.4.1.19775.1.1.6.31)
 *
 * Table for current events present on the system
 */
typedef struct
{
    INT32 earEventIndex;
    INT32 earEventType;
    MAN_OCTET_STRING_TYPE earEventTimeStamp;
    INT32 earEventSeverity;
} earEventTableType;

/*
 * Hint codes for fields in table earEventTable(1.3.6.1.4.1.19775.1.1.6.31)
 */
#define earEventIndexHint 0
#define earEventTypeHint 1
#define earEventTimeStampHint 2
#define earEventSeverityHint 3

/*
 * MIB table earHistoryTable(1.3.6.1.4.1.19775.1.1.7.1)
 *
 * Table for history of events which have occurred on the system
 */
typedef struct
{
    WORD32 earHistoryIndex;
    INT32 earHistoryType;
    MAN_OCTET_STRING_TYPE earHistoryTimeStamp;
    INT32 earHistorySeverity;
} earHistoryTableType;

/*
 * Hint codes for fields in table earHistoryTable(1.3.6.1.4.1.19775.1.1.7.1)
 */
#define earHistoryIndexHint 0
#define earHistoryTypeHint 1
#define earHistoryTimeStampHint 2
#define earHistorySeverityHint 3

typedef struct {
			unsigned char earModelNumber[MAX_2U_RESPONSE];
			unsigned char earSerialNumber[MAX_2U_RESPONSE];
			unsigned char earDateOfManufacture[MAX_2U_RESPONSE];
			unsigned char earFirmwareRevision[MAX_2U_RESPONSE];
			unsigned long earIpAddress;
			unsigned long earSubnetMask;
			unsigned long earGateway;
			unsigned long earGainControlSetpoint;
			unsigned long earMeasuredGainValue;
			unsigned long earMinimumGainSetpoint;
			unsigned long earMaximumGainSetpoint;
			unsigned long earOutputPowerSetpointValue;
			unsigned long earTotalOpticalOutputPower;
			unsigned long earMaximumPowerSetpoint;
			unsigned long earCurrentSetpointValue;
			unsigned long earMaximumCurrentSetpoint;
			unsigned long earPumpLaserCurrent;
			unsigned long earPumpLaserCurrent2;
			unsigned long earAmbientTemperature;
			unsigned long earTotalOpticalInputPower;
			unsigned long earPowerSafetyMode;
			unsigned long earPumpOff;
			int earControlMode;
			int earControlModeFD;
			int earDeviceType;
			int earDeviceTypeFD;
			int earDataMode;
			int	earTemperatureThreshold;
			unsigned long earOSCPowerSetpointValue;
			unsigned long earOutputPower2SetpointValue;
			unsigned long earTotalOpticalOutputPower2;
			unsigned long earGainControlSetpoint2;
			unsigned long earTotalOpticalInput2Power;
			unsigned long earTemperatureAlarmThreshold;
			unsigned long earInputPowerLowAlarmLevel;
			unsigned long earFactoryDefaultInputPowerLowAlarmLevel;
			unsigned long earInputPowerOffAlarmLevel;
			unsigned long earInputPowerHighAlarmLevel;
			unsigned long earInputPowerTooHighAlarmLevel;
			unsigned long earOutputPowerLowAlarmLevel;
			unsigned long earOutputPowerOffAlarmLevel;
			unsigned long earOutputPowerHighAlarmLevel;
			unsigned long earOutputPowerTooHighAlarmLevel;
			unsigned long earStatusValue;
			unsigned long earRelayAlarmStatus;
			unsigned long earRelayStatus;
			unsigned long earAlarmStatus;
			unsigned long earSetRelayInputPowerLowAlarm;
			unsigned long earSetRelayInputPowerHighAlarm;
			unsigned long earSetRelayInputPowerTooHighAlarm;
			unsigned long earSetRelayOutputPowerLowAlarm;
			unsigned long earSetRelayOutputPowerHighAlarm;
			unsigned long earSetRelayOutputPowerTooHighAlarm;
			unsigned long earSetRelayFanFailureAlarm;
			unsigned long earSetRelayAmbientTemperatureHighAlarm;
			unsigned long earOutputPower2OffAlarmLevel;
			unsigned long earOutputPower2LowAlarmLevel;
			unsigned long earOutputPower2HighAlarmLevel;
			unsigned long earOutputPower2TooHighAlarmLevel;
			unsigned long earInput2PowerLowAlarmLevel;
			unsigned long earInput2PowerOffAlarmLevel;
			unsigned long earInput2PowerHighAlarmLevel;
			unsigned long earInput2PowerTooHighAlarmLevel;
} MIB_Leaves;

MIB_Leaves Mib_Leave[1];
MIB_Leaves *Mib_Leaves;

/*
 * Defines for management variable identifiers.
 */
#define EARMIB_earModelNumber "1.3.6.1.4.1.19775.1.1.1.1"
#define EARMIB_earSerialNumber "1.3.6.1.4.1.19775.1.1.1.2"
#define EARMIB_earDateOfManufacture "1.3.6.1.4.1.19775.1.1.1.3"
#define EARMIB_earFirmwareRevision "1.3.6.1.4.1.19775.1.1.1.4"
#define EARMIB_earControlMode "1.3.6.1.4.1.19775.1.1.1.5"
#define EARMIB_earRtcTime "1.3.6.1.4.1.19775.1.1.1.6"
#define EARMIB_earDigiFirmwareRevision "1.3.6.1.4.1.19775.1.1.1.7"
#define EARMIB_earDigiBank1FirmwareRevision "1.3.6.1.4.1.19775.1.1.1.8"
#define EARMIB_earDigiBank2FirmwareRevision "1.3.6.1.4.1.19775.1.1.1.9"
#define EARMIB_earDigiSelectedFirmwareBank "1.3.6.1.4.1.19775.1.1.1.10"
#define EARMIB_earDigiFirmwareConfirm "1.3.6.1.4.1.19775.1.1.1.11"
#define EARMIB_earUpgradeDigiFirmware "1.3.6.1.4.1.19775.1.1.1.12"
#define EARMIB_earCleiCode "1.3.6.1.4.1.19775.1.1.1.13"
#define EARMIB_earTelnetTimeout "1.3.6.1.4.1.19775.1.1.1.14"
#define EARMIB_earIpAddress "1.3.6.1.4.1.19775.1.1.1.15"
#define EARMIB_earSubnetMask "1.3.6.1.4.1.19775.1.1.1.16"
#define EARMIB_earGateway "1.3.6.1.4.1.19775.1.1.1.17"
#define EARMIB_earVendorProductNameAndSerialNumber "1.3.6.1.4.1.19775.1.1.1.18"
#define EARMIB_earLastTrapSent "1.3.6.1.4.1.19775.1.1.1.19"
#define EARMIB_earTrapPort "1.3.6.1.4.1.19775.1.1.1.20"
#define EARMIB_earSnmpMngrTable "1.3.6.1.4.1.19775.1.1.1.21"
#define EARMIB_earGainControlSetpoint "1.3.6.1.4.1.19775.1.1.2.1"
#define EARMIB_earMeasuredGainValue "1.3.6.1.4.1.19775.1.1.2.2"
#define EARMIB_earMinimumGainSetpoint "1.3.6.1.4.1.19775.1.1.2.3"
#define EARMIB_earMaximumGainSetpoint "1.3.6.1.4.1.19775.1.1.2.4"
#define EARMIB_earOutputPowerSetpointValue "1.3.6.1.4.1.19775.1.1.2.5"
#define EARMIB_earTotalOpticalOutputPower "1.3.6.1.4.1.19775.1.1.2.6"
#define EARMIB_earMaximumPowerSetpoint "1.3.6.1.4.1.19775.1.1.2.7"
#define EARMIB_earCurrentSetpointValue "1.3.6.1.4.1.19775.1.1.2.8"
#define EARMIB_earMaximumCurrentSetpoint "1.3.6.1.4.1.19775.1.1.2.9"
#define EARMIB_earPumpLaserCurrent "1.3.6.1.4.1.19775.1.1.2.10"
#define EARMIB_earAmbientTemperature "1.3.6.1.4.1.19775.1.1.2.11"
#define EARMIB_earTotalOpticalInputPower "1.3.6.1.4.1.19775.1.1.2.12"
#define EARMIB_earPowerSafetyMode "1.3.6.1.4.1.19775.1.1.2.13"
#define EARMIB_earPumpsOff "1.3.6.1.4.1.19775.1.1.2.14"
#define EARMIB_earChassisReboot "1.3.6.1.4.1.19775.1.1.2.15"
#define EARMIB_earOutputPowerALSonFDSetpoint "1.3.6.1.4.1.19775.1.1.2.16"
#define EARMIB_earOutputPower2ALSonFDSetpoint "1.3.6.1.4.1.19775.1.1.2.17"
#define EARMIB_earOutputPowerALSoffFDSetpoint "1.3.6.1.4.1.19775.1.1.2.18"
#define EARMIB_earOutputPower2ALSoffFDSetpoint "1.3.6.1.4.1.19775.1.1.2.19"
#define EARMIB_earOutputPowerALSonSetpoint "1.3.6.1.4.1.19775.1.1.2.20"
#define EARMIB_earOutputPower2ALSonSetpoint "1.3.6.1.4.1.19775.1.1.2.21"
#define EARMIB_earOutputPowerALSoffSetpoint "1.3.6.1.4.1.19775.1.1.2.22"
#define EARMIB_earOutputPower2ALSoffSetpoint "1.3.6.1.4.1.19775.1.1.2.23"
#define EARMIB_earControlModeFD "1.3.6.1.4.1.19775.1.1.2.24"
#define EARMIB_earDeviceType "1.3.6.1.4.1.19775.1.1.2.25"
#define EARMIB_earDeviceTypeFD "1.3.6.1.4.1.19775.1.1.2.26"
#define EARMIB_earALSonDuration "1.3.6.1.4.1.19775.1.1.2.27"
#define EARMIB_earALSoffDuration "1.3.6.1.4.1.19775.1.1.2.28"
#define EARMIB_earNominalDuration "1.3.6.1.4.1.19775.1.1.2.29"
#define EARMIB_earDataMode "1.3.6.1.4.1.19775.1.1.2.30"
#define EARMIB_earOSCPowerSetpointValue "1.3.6.1.4.1.19775.1.1.2.31"
#define EARMIB_earOutputPower2SetpointValue "1.3.6.1.4.1.19775.1.1.2.32"
#define EARMIB_earTotalOpticalOutputPower2 "1.3.6.1.4.1.19775.1.1.2.33"
#define EARMIB_earGainControlSetpoint2 "1.3.6.1.4.1.19775.1.1.2.34"
#define EARMIB_earOSCOpticalPower "1.3.6.1.4.1.19775.1.1.2.35"
#define EARMIB_earAliveTrapPeriod "1.3.6.1.4.1.19775.1.1.2.36"
#define EARMIB_earTotalOpticalInput2Power "1.3.6.1.4.1.19775.1.1.2.37"
#define EARMIB_earTemperatureAlarmThreshold "1.3.6.1.4.1.19775.1.1.3.1"
#define EARMIB_earInputPowerLowAlarmLevel "1.3.6.1.4.1.19775.1.1.3.2"
#define EARMIB_earFactoryDefaultInputPowerLowAlarmLevel "1.3.6.1.4.1.19775.1.1.3.3"
#define EARMIB_earInputPowerOffAlarmLevel "1.3.6.1.4.1.19775.1.1.3.4"
#define EARMIB_earInputPowerHighAlarmLevel "1.3.6.1.4.1.19775.1.1.3.5"
#define EARMIB_earInputPowerTooHighAlarmLevel "1.3.6.1.4.1.19775.1.1.3.6"
#define EARMIB_earOutputPowerLowAlarmLevel "1.3.6.1.4.1.19775.1.1.3.7"
#define EARMIB_earOutputPowerOffAlarmLevel "1.3.6.1.4.1.19775.1.1.3.8"
#define EARMIB_earOutputPowerHighAlarmLevel "1.3.6.1.4.1.19775.1.1.3.9"
#define EARMIB_earOutputPowerTooHighAlarmLevel "1.3.6.1.4.1.19775.1.1.3.10"
#define EARMIB_earStatusValue "1.3.6.1.4.1.19775.1.1.3.11"
#define EARMIB_earRelayAlarmStatus "1.3.6.1.4.1.19775.1.1.3.12"
#define EARMIB_earRelayStatus "1.3.6.1.4.1.19775.1.1.3.13"
#define EARMIB_earAlarmStatus "1.3.6.1.4.1.19775.1.1.3.14"
#define EARMIB_earSetRelayInputPowerLowAlarm "1.3.6.1.4.1.19775.1.1.3.15"
#define EARMIB_earSetRelayInputPowerHighAlarm "1.3.6.1.4.1.19775.1.1.3.16"
#define EARMIB_earSetRelayInputPowerTooHighAlarm "1.3.6.1.4.1.19775.1.1.3.17"
#define EARMIB_earSetRelayOutputPowerLowAlarm "1.3.6.1.4.1.19775.1.1.3.18"
#define EARMIB_earSetRelayOutputPowerHighAlarm "1.3.6.1.4.1.19775.1.1.3.19"
#define EARMIB_earSetRelayOutputPowerTooHighAlarm "1.3.6.1.4.1.19775.1.1.3.20"
#define EARMIB_earSetRelayFanFailureAlarm "1.3.6.1.4.1.19775.1.1.3.21"
#define EARMIB_earSetRelayAmbientTemperatureHighAlarm "1.3.6.1.4.1.19775.1.1.3.22"
#define EARMIB_earOutputPower2OffAlarmLevel "1.3.6.1.4.1.19775.1.1.3.23"
#define EARMIB_earOutputPower2LowAlarmLevel "1.3.6.1.4.1.19775.1.1.3.24"
#define EARMIB_earOutputPower2HighAlarmLevel "1.3.6.1.4.1.19775.1.1.3.25"
#define EARMIB_earOutputPower2TooHighAlarmLevel "1.3.6.1.4.1.19775.1.1.3.26"
#define EARMIB_earAlarmTable "1.3.6.1.4.1.19775.1.1.3.27"
#define EARMIB_earInput2PowerLowAlarmLevel "1.3.6.1.4.1.19775.1.1.3.28"
#define EARMIB_earInput2PowerOffAlarmLevel "1.3.6.1.4.1.19775.1.1.3.29"
#define EARMIB_earInput2PowerHighAlarmLevel "1.3.6.1.4.1.19775.1.1.3.30"
#define EARMIB_earInput2PowerTooHighAlarmLevel "1.3.6.1.4.1.19775.1.1.3.31"
#define EARMIB_earEventTable "1.3.6.1.4.1.19775.1.1.6.31"
#define EARMIB_earHistoryTable "1.3.6.1.4.1.19775.1.1.7.1"



/*
 * Defines for enumerated values of earControlMode(1.3.6.1.4.1.19775.1.1.1.5)
 */
#define EARMIB_earControlMode_power 1
#define EARMIB_earControlMode_current 2
#define EARMIB_earControlMode_gain 3



/*
 * Defines for enumerated values of earDigiSelectedFirmwareBank(1.3.6.1.4.1.19775.1.1.1.10)
 */
#define EARMIB_earDigiSelectedFirmwareBank_flashbank1 1
#define EARMIB_earDigiSelectedFirmwareBank_flashbank2 2



/*
 * Defines for enumerated values of earDigiFirmwareConfirm(1.3.6.1.4.1.19775.1.1.1.11)
 */
#define EARMIB_earDigiFirmwareConfirm_confirmed 1
#define EARMIB_earDigiFirmwareConfirm_unconfirmed 2



/*
 * Defines for enumerated values of earControlModeFD(1.3.6.1.4.1.19775.1.1.2.24)
 */
#define EARMIB_earControlModeFD_power 1
#define EARMIB_earControlModeFD_current 2
#define EARMIB_earControlModeFD_gain 3



/*
 * Defines for enumerated values of earDeviceType(1.3.6.1.4.1.19775.1.1.2.25)
 */
#define EARMIB_earDeviceType_legacy 1
#define EARMIB_earDeviceType_master 2
#define EARMIB_earDeviceType_slave 3



/*
 * Defines for enumerated values of earDeviceTypeFD(1.3.6.1.4.1.19775.1.1.2.26)
 */
#define EARMIB_earDeviceTypeFD_legacy 1
#define EARMIB_earDeviceTypeFD_master 2
#define EARMIB_earDeviceTypeFD_slave 3



/*
 * Defines for enumerated values of earDataMode(1.3.6.1.4.1.19775.1.1.2.30)
 */
#define EARMIB_earDataMode_off 1
#define EARMIB_earDataMode_als 2
#define EARMIB_earDataMode_nominal 3



/*
 * Defines for enumerated values of earRelayStatus(1.3.6.1.4.1.19775.1.1.3.13)
 */
#define EARMIB_earRelayStatus_normal 1
#define EARMIB_earRelayStatus_tripped 2



/*
 * Defines for enumerated values of earSetRelayInputPowerLowAlarm(1.3.6.1.4.1.19775.1.1.3.15)
 */
#define EARMIB_earSetRelayInputPowerLowAlarm_disabled 0
#define EARMIB_earSetRelayInputPowerLowAlarm_enabled 1



/*
 * Defines for enumerated values of earSetRelayInputPowerHighAlarm(1.3.6.1.4.1.19775.1.1.3.16)
 */
#define EARMIB_earSetRelayInputPowerHighAlarm_disabled 0
#define EARMIB_earSetRelayInputPowerHighAlarm_enabled 1



/*
 * Defines for enumerated values of earSetRelayInputPowerTooHighAlarm(1.3.6.1.4.1.19775.1.1.3.17)
 */
#define EARMIB_earSetRelayInputPowerTooHighAlarm_disabled 0
#define EARMIB_earSetRelayInputPowerTooHighAlarm_enabled 1



/*
 * Defines for enumerated values of earSetRelayOutputPowerLowAlarm(1.3.6.1.4.1.19775.1.1.3.18)
 */
#define EARMIB_earSetRelayOutputPowerLowAlarm_disabled 0
#define EARMIB_earSetRelayOutputPowerLowAlarm_enabled 1



/*
 * Defines for enumerated values of earSetRelayOutputPowerHighAlarm(1.3.6.1.4.1.19775.1.1.3.19)
 */
#define EARMIB_earSetRelayOutputPowerHighAlarm_disabled 0
#define EARMIB_earSetRelayOutputPowerHighAlarm_enabled 1



/*
 * Defines for enumerated values of earSetRelayOutputPowerTooHighAlarm(1.3.6.1.4.1.19775.1.1.3.20)
 */
#define EARMIB_earSetRelayOutputPowerTooHighAlarm_disabled 0
#define EARMIB_earSetRelayOutputPowerTooHighAlarm_enabled 1



/*
 * Defines for enumerated values of earSetRelayFanFailureAlarm(1.3.6.1.4.1.19775.1.1.3.21)
 */
#define EARMIB_earSetRelayFanFailureAlarm_disabled 0
#define EARMIB_earSetRelayFanFailureAlarm_enabled 1



/*
 * Defines for enumerated values of earSetRelayAmbientTemperatureHighAlarm(1.3.6.1.4.1.19775.1.1.3.22)
 */
#define EARMIB_earSetRelayAmbientTemperatureHighAlarm_disabled 0
#define EARMIB_earSetRelayAmbientTemperatureHighAlarm_enabled 1



/*
 * List of items in MIB that are registered with the management API.
 */
extern manVarType EARMIB[4];



/*
 * Declaration for list of MIB variables provided to Fusion agent.
 */
extern struct mVariableStruct4 EARMIBGroup1[];
extern struct mVariableStruct2 EARMIBGroup2[];
extern struct mVariableStruct4 EARMIBGroup3[];
extern struct mVariableStruct4 EARMIBGroup4[];
extern struct mVariableStruct4 EARMIBGroup5[];






/*
 * To Do:  Write code to send trap messages.  The code must 
 *         detect when a trap event occurs, build a trap message,
 *         and send the trap message.  The SNMP agent provides 
 *         utility functions to build and send trap messages.
 *         The variables defined below contain information that may
 *         be useful when building trap messages.
 */


/*
 * Trap earEdfaAlarmTemperature(1.3.6.1.4.1.19775.1.1.4.1).
 *
 * Ambient temperature too high 
 */
extern snmpAgentTrapType earEdfaAlarmTemperatureTrap;


/*
 * Trap earEdfaAlarmFan(1.3.6.1.4.1.19775.1.1.4.2).
 *
 * Fan failure 
 */
extern snmpAgentTrapType earEdfaAlarmFanTrap;


/*
 * Trap earEdfaAlarmOutputTooHigh(1.3.6.1.4.1.19775.1.1.4.3).
 *
 * Output power > 10% above defined upper limit threshold 
 */
extern snmpAgentTrapType earEdfaAlarmOutputTooHighTrap;


/*
 * Trap earEdfaAlarmOutputHigh(1.3.6.1.4.1.19775.1.1.4.4).
 *
 * Output power > 5% above defined upper limit threshold 
 */
extern snmpAgentTrapType earEdfaAlarmOutputHighTrap;


/*
 * Trap earEdfaAlarmOutputLow(1.3.6.1.4.1.19775.1.1.4.5).
 *
 * Output power > 10% below defined lower limit threshold 
 */
extern snmpAgentTrapType earEdfaAlarmOutputLowTrap;


/*
 * Trap earEdfaAlarmInputTooHigh(1.3.6.1.4.1.19775.1.1.4.6).
 *
 * Input power > 10% above defined upper limit threshold 
 */
extern snmpAgentTrapType earEdfaAlarmInputTooHighTrap;


/*
 * Trap earEdfaAlarmInputHigh(1.3.6.1.4.1.19775.1.1.4.7).
 *
 * Input power > 5% above defined upper limit threshold 
 */
extern snmpAgentTrapType earEdfaAlarmInputHighTrap;


/*
 * Trap earEdfaAlarmInputLow(1.3.6.1.4.1.19775.1.1.4.8).
 *
 * Input power > 10% below defined lower limit threshold 
 */
extern snmpAgentTrapType earEdfaAlarmInputLowTrap;


/*
 * Trap earEdfaAlarmOutputOff(1.3.6.1.4.1.19775.1.1.4.9).
 *
 * Output power is off 
 */
extern snmpAgentTrapType earEdfaAlarmOutputOffTrap;


/*
 * Trap earEdfaAlarmInputOff(1.3.6.1.4.1.19775.1.1.4.10).
 *
 * Input power is off 
 */
extern snmpAgentTrapType earEdfaAlarmInputOffTrap;


/*
 * Trap earEdfaAlarmInterlock(1.3.6.1.4.1.19775.1.1.4.11).
 *
 * Laser interlock failure 
 */
extern snmpAgentTrapType earEdfaAlarmInterlockTrap;


/*
 * Trap earEdfaAlarmPowerSupply1(1.3.6.1.4.1.19775.1.1.4.12).
 *
 * Power supply 1 failure 
 */
extern snmpAgentTrapType earEdfaAlarmPowerSupply1Trap;


/*
 * Trap earEdfaAlarmPowerSupply2(1.3.6.1.4.1.19775.1.1.4.13).
 *
 * Power supply 2 failure 
 */
extern snmpAgentTrapType earEdfaAlarmPowerSupply2Trap;


/*
 * Trap earEdfaAlarmPowerSafetyMode(1.3.6.1.4.1.19775.1.1.4.14).
 *
 * Power safety mode has been engaged
 */
extern snmpAgentTrapType earEdfaAlarmPowerSafetyModeTrap;


/*
 * Trap earEdfaAlarmKeyswitch(1.3.6.1.4.1.19775.1.1.4.15).
 *
 * Chassis key has been switched
 */
extern snmpAgentTrapType earEdfaAlarmKeyswitchTrap;


/*
 * Trap earEdfaAlarmOutput2Off(1.3.6.1.4.1.19775.1.1.4.16).
 *
 * Output power 2 is off
 */
extern snmpAgentTrapType earEdfaAlarmOutput2OffTrap;


/*
 * Trap earEdfaAlarmOutput2Low(1.3.6.1.4.1.19775.1.1.4.17).
 *
 * Output power 2 is low
 */
extern snmpAgentTrapType earEdfaAlarmOutput2LowTrap;


/*
 * Trap earEdfaAlarmOutput2High(1.3.6.1.4.1.19775.1.1.4.18).
 *
 * Output power 2 is high
 */
extern snmpAgentTrapType earEdfaAlarmOutput2HighTrap;


/*
 * Trap earEdfaAlarmOutput2TooHigh(1.3.6.1.4.1.19775.1.1.4.19).
 *
 * Output power 2 is too high
 */
extern snmpAgentTrapType earEdfaAlarmOutput2TooHighTrap;


/*
 * Trap earEdfaAlarmPump(1.3.6.1.4.1.19775.1.1.4.20).
 *
 * Pump alarm
 */
extern snmpAgentTrapType earEdfaAlarmPumpTrap;

/*
 * Trap earEdfaAlarmInput2TooHigh(1.3.6.1.4.1.19775.1.1.4.21).
 *
 * Input power > 10% above defined upper limit threshold 
 */
extern snmpAgentTrapType earEdfaAlarmInput2TooHighTrap;


/*
 * Trap earEdfaAlarmInput2High(1.3.6.1.4.1.19775.1.1.4.22).
 *
 * Input power > 5% above defined upper limit threshold 
 */
extern snmpAgentTrapType earEdfaAlarmInput2HighTrap;


/*
 * Trap earEdfaAlarmInputLow(1.3.6.1.4.1.19775.1.1.4.23).
 *
 * Input power > 10% below defined lower limit threshold 
 */
extern snmpAgentTrapType earEdfaAlarmInput2LowTrap;

/*
 * Trap earEdfaAlarmInputOff(1.3.6.1.4.1.19775.1.1.4.24).
 *
 * Input power is off 
 */
extern snmpAgentTrapType earEdfaAlarmInput2OffTrap;


/*
 * Trap earEdfaAlarmTemperatureCleared(1.3.6.1.4.1.19775.1.1.5.1).
 *
 * Ambient temperature too high 
 */
extern snmpAgentTrapType earEdfaAlarmTemperatureClearedTrap;


/*
 * Trap earEdfaAlarmFanCleared(1.3.6.1.4.1.19775.1.1.5.2).
 *
 * Fan failure 
 */
extern snmpAgentTrapType earEdfaAlarmFanClearedTrap;


/*
 * Trap earEdfaAlarmOutputTooHighCleared(1.3.6.1.4.1.19775.1.1.5.3).
 *
 * Output power > 10% above defined upper limit threshold 
 */
extern snmpAgentTrapType earEdfaAlarmOutputTooHighClearedTrap;


/*
 * Trap earEdfaAlarmOutputHighCleared(1.3.6.1.4.1.19775.1.1.5.4).
 *
 * Output power > 5% above defined upper limit threshold 
 */
extern snmpAgentTrapType earEdfaAlarmOutputHighClearedTrap;


/*
 * Trap earEdfaAlarmOutputLowCleared(1.3.6.1.4.1.19775.1.1.5.5).
 *
 * Output power > 10% below defined lower limit threshold 
 */
extern snmpAgentTrapType earEdfaAlarmOutputLowClearedTrap;


/*
 * Trap earEdfaAlarmInputTooHighCleared(1.3.6.1.4.1.19775.1.1.5.6).
 *
 * Input power > 10% above defined upper limit threshold 
 */
extern snmpAgentTrapType earEdfaAlarmInputTooHighClearedTrap;


/*
 * Trap earEdfaAlarmInputHighCleared(1.3.6.1.4.1.19775.1.1.5.7).
 *
 * Input power > 5% above defined upper limit threshold 
 */
extern snmpAgentTrapType earEdfaAlarmInputHighClearedTrap;


/*
 * Trap earEdfaAlarmInputLowCleared(1.3.6.1.4.1.19775.1.1.5.8).
 *
 * Input power > 10% below defined lower limit threshold 
 */
extern snmpAgentTrapType earEdfaAlarmInputLowClearedTrap;


/*
 * Trap earEdfaAlarmOutputOffCleared(1.3.6.1.4.1.19775.1.1.5.9).
 *
 * Output power is off 
 */
extern snmpAgentTrapType earEdfaAlarmOutputOffClearedTrap;


/*
 * Trap earEdfaAlarmInputOffCleared(1.3.6.1.4.1.19775.1.1.5.10).
 *
 * Input power is off 
 */
extern snmpAgentTrapType earEdfaAlarmInputOffClearedTrap;


/*
 * Trap earEdfaAlarmInterlockCleared(1.3.6.1.4.1.19775.1.1.5.11).
 *
 * Laser interlock failure 
 */
extern snmpAgentTrapType earEdfaAlarmInterlockClearedTrap;


/*
 * Trap earEdfaAlarmPowerSupply1Cleared(1.3.6.1.4.1.19775.1.1.5.12).
 *
 * Power supply 1 failure 
 */
extern snmpAgentTrapType earEdfaAlarmPowerSupply1ClearedTrap;


/*
 * Trap earEdfaAlarmPowerSupply2Cleared(1.3.6.1.4.1.19775.1.1.5.13).
 *
 * Power supply 2 failure 
 */
extern snmpAgentTrapType earEdfaAlarmPowerSupply2ClearedTrap;


/*
 * Trap earEdfaAlarmPowerSafetyModeCleared(1.3.6.1.4.1.19775.1.1.5.14).
 *
 * Power safety mode has been disengaged
 */
extern snmpAgentTrapType earEdfaAlarmPowerSafetyModeClearedTrap;


/*
 * Trap earEdfaAlarmKeyswitchCleared(1.3.6.1.4.1.19775.1.1.5.15).
 *
 * Chassis key has been switched
 */
extern snmpAgentTrapType earEdfaAlarmKeyswitchClearedTrap;


/*
 * Trap earEdfaAlarmOutput2OffCleared(1.3.6.1.4.1.19775.1.1.5.16).
 *
 * Chassis key has been switched
 */
extern snmpAgentTrapType earEdfaAlarmOutput2OffClearedTrap;


/*
 * Trap earEdfaAlarmOutput2LowCleared(1.3.6.1.4.1.19775.1.1.5.17).
 *
 * Chassis key has been switched
 */
extern snmpAgentTrapType earEdfaAlarmOutput2LowClearedTrap;


/*
 * Trap earEdfaAlarmOutput2HighCleared(1.3.6.1.4.1.19775.1.1.5.18).
 *
 * Chassis key has been switched
 */
extern snmpAgentTrapType earEdfaAlarmOutput2HighClearedTrap;


/*
 * Trap earEdfaAlarmOutput2TooHighCleared(1.3.6.1.4.1.19775.1.1.5.19).
 *
 * Chassis key has been switched
 */
extern snmpAgentTrapType earEdfaAlarmOutput2TooHighClearedTrap;


/*
 * Trap earEdfaAlarmPumpCleared(1.3.6.1.4.1.19775.1.1.5.20).
 *
 * Chassis key has been switched
 */
extern snmpAgentTrapType earEdfaAlarmPumpClearedTrap;
//-------------------------------- Hazem
/*
 * Trap earEdfaAlarmInput2TooHighCleared(1.3.6.1.4.1.19775.1.1.5.21).
 *
 * Input power > 10% above defined upper limit threshold 
 */
extern snmpAgentTrapType earEdfaAlarmInput2TooHighClearedTrap;


/*
 * Trap earEdfaAlarmInput2HighCleared(1.3.6.1.4.1.19775.1.1.5.22).
 *
 * Input power > 5% above defined upper limit threshold 
 */
extern snmpAgentTrapType earEdfaAlarmInput2HighClearedTrap;


/*
 * Trap earEdfaAlarmInput2LowCleared(1.3.6.1.4.1.19775.1.1.5.23).
 *
 * Input power > 10% below defined lower limit threshold 
 */
extern snmpAgentTrapType earEdfaAlarmInput2LowClearedTrap;

/*
 * Trap earEdfaAlarmInput2OffCleared(1.3.6.1.4.1.19775.1.1.5.24).
 *
 * Input power is off 
 */
extern snmpAgentTrapType earEdfaAlarmInput2OffClearedTrap;


/*
 * Trap earControlModeEvent(1.3.6.1.4.1.19775.1.1.6.1).
 *
 * Power supply 2 failure 
 */
extern snmpAgentTrapType earControlModeEventTrap;


/*
 * Trap earRtcEvent(1.3.6.1.4.1.19775.1.1.6.2).
 *
 * Real Time Clock time setting has been changed.
 */
extern snmpAgentTrapType earRtcEventTrap;


/*
 * Trap earSelectedFirmwareBankEvent(1.3.6.1.4.1.19775.1.1.6.3).
 *
 * Selected firmware bank has been changed.
 */
extern snmpAgentTrapType earSelectedFirmwareBankEventTrap;


/*
 * Trap earDigiFirmwareConfirmEvent(1.3.6.1.4.1.19775.1.1.6.4).
 *
 * Firmware confirmation event has occurred.
 */
extern snmpAgentTrapType earDigiFirmwareConfirmEventTrap;


/*
 * Trap earUpgradeDigiFirmwareEvent(1.3.6.1.4.1.19775.1.1.6.5).
 *
 * Firmware has been upgraded in an application image area flash bank.
 */
extern snmpAgentTrapType earUpgradeDigiFirmwareEventTrap;


/*
 * Trap earTelnetTimeoutEvent(1.3.6.1.4.1.19775.1.1.6.6).
 *
 * Telnet timeout value has been modified.
 */
extern snmpAgentTrapType earTelnetTimeoutEventTrap;


/*
 * Trap earIPAddressEvent(1.3.6.1.4.1.19775.1.1.6.7).
 *
 * Chassis IP address value has been modified.
 */
extern snmpAgentTrapType earIPAddressEventTrap;


/*
 * Trap earSubnetMaskEvent(1.3.6.1.4.1.19775.1.1.6.8).
 *
 * Chassis IP subnet mask address has been modified.
 */
extern snmpAgentTrapType earSubnetMaskEventTrap;


/*
 * Trap earGatewayEvent(1.3.6.1.4.1.19775.1.1.6.9).
 *
 * Chassis IP gateway address value has been modified.
 */
extern snmpAgentTrapType earGatewayEventTrap;


/*
 * Trap earGainControlSetpointEvent(1.3.6.1.4.1.19775.1.1.6.10).
 *
 * Gain control setpoint value has been modified.
 */
extern snmpAgentTrapType earGainControlSetpointEventTrap;


/*
 * Trap earOutputPowerSetpointEvent(1.3.6.1.4.1.19775.1.1.6.11).
 *
 * Output power setpoint value has been modified.
 */
extern snmpAgentTrapType earOutputPowerSetpointEventTrap;


/*
 * Trap earCurrentSetpointValueEvent(1.3.6.1.4.1.19775.1.1.6.12).
 *
 * Current setpoint value has been modified.
 */
extern snmpAgentTrapType earCurrentSetpointValueEventTrap;


/*
 * Trap earInputPowerLowAlarmLevelEvent(1.3.6.1.4.1.19775.1.1.6.13).
 *
 * Input power low alarm level has been modified.
 */
extern snmpAgentTrapType earInputPowerLowAlarmLevelEventTrap;


/*
 * Trap earRelayInputPowerLowAlarmEvent(1.3.6.1.4.1.19775.1.1.6.14).
 *
 * Input power low alarm relay value has been modified.
 */
extern snmpAgentTrapType earRelayInputPowerLowAlarmEventTrap;


/*
 * Trap earRelayInputPowerHighAlarmEvent(1.3.6.1.4.1.19775.1.1.6.15).
 *
 * Input power high alarm relay value has been modified.
 */
extern snmpAgentTrapType earRelayInputPowerHighAlarmEventTrap;


/*
 * Trap earRelayInputPowerTooHighAlarmEvent(1.3.6.1.4.1.19775.1.1.6.16).
 *
 * Input power too high alarm relay value has been modified.
 */
extern snmpAgentTrapType earRelayInputPowerTooHighAlarmEventTrap;


/*
 * Trap earRelayOutputPowerLowAlarmEvent(1.3.6.1.4.1.19775.1.1.6.17).
 *
 * Output power low alarm relay value has been modified.
 */
extern snmpAgentTrapType earRelayOutputPowerLowAlarmEventTrap;


/*
 * Trap earRelayOutputPowerHighAlarmEvent(1.3.6.1.4.1.19775.1.1.6.18).
 *
 * Output power high alarm relay value has been modified.
 */
extern snmpAgentTrapType earRelayOutputPowerHighAlarmEventTrap;


/*
 * Trap earRelayOutputPowerTooHighAlarmEvent(1.3.6.1.4.1.19775.1.1.6.19).
 *
 * Output power too high alarm relay value has been modified.
 */
extern snmpAgentTrapType earRelayOutputPowerTooHighAlarmEventTrap;


/*
 * Trap earRelayFanFailureAlarmEvent(1.3.6.1.4.1.19775.1.1.6.20).
 *
 * Fan failure alarm relay value has been modified.
 */
extern snmpAgentTrapType earRelayFanFailureAlarmEventTrap;


/*
 * Trap earRelayAmbientTemperatureAlarmEvent(1.3.6.1.4.1.19775.1.1.6.21).
 *
 * Ambient temperature alarm relay value has been modified.
 */
extern snmpAgentTrapType earRelayAmbientTemperatureAlarmEventTrap;


/*
 * Trap earPowerSafetyModeEvent(1.3.6.1.4.1.19775.1.1.6.22).
 *
 * Output power value has been modified to the safety setting.
 */
extern snmpAgentTrapType earPowerSafetyModeEventTrap;


/*
 * Trap earPumpsOffEvent(1.3.6.1.4.1.19775.1.1.6.23).
 *
 * Output power value has been modified to turn the pumps off.
 */
extern snmpAgentTrapType earPumpsOffEventTrap;


/*
 * Trap earChassisRebootEvent(1.3.6.1.4.1.19775.1.1.6.24).
 *
 * EDFA chassis processor device is being reset.
 */
extern snmpAgentTrapType earChassisRebootEventTrap;


/*
 * Trap earMgmtStationAddEvent(1.3.6.1.4.1.19775.1.1.6.25).
 *
 * An SNMP management station has been added
 */
extern snmpAgentTrapType earMgmtStationAddEventTrap;


/*
 * Trap earMgmtStationRemoveEvent(1.3.6.1.4.1.19775.1.1.6.26).
 *
 * An SNMP management station has been removed
 */
extern snmpAgentTrapType earMgmtStationRemoveEventTrap;


/*
 * Trap earPrivateCommunityStrEvent(1.3.6.1.4.1.19775.1.1.6.27).
 *
 * An SNMP management station private community string value has been modified.
 */
extern snmpAgentTrapType earPrivateCommunityStrEventTrap;


/*
 * Trap earPublicCommunityStrEvent(1.3.6.1.4.1.19775.1.1.6.28).
 *
 * An SNMP management station public community string value has been modified.
 */
extern snmpAgentTrapType earPublicCommunityStrEventTrap;


/*
 * Trap earTemperatureAlarmThresholdEvent(1.3.6.1.4.1.19775.1.1.6.29).
 *
 * Temperature alarm threshold is being reset.
 */
extern snmpAgentTrapType earTemperatureAlarmThresholdEventTrap;


/*
 * Trap earSnmpPortSetEvent(1.3.6.1.4.1.19775.1.1.6.30).
 *
 * The SNMP trap port is being set.
 */
extern snmpAgentTrapType earSnmpPortSetEventTrap;
#endif
